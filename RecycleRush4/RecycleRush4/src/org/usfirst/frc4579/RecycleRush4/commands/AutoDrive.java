// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4579.RecycleRush4.commands;

import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc4579.RecycleRush4.Robot;

/**
 *
 */
public class  AutoDrive extends Command {
	
	/*
	 * This command is meant to drive to the autozone regardless of previous field position 
	 * since forward distance is calculated using the gyro and multiple accelerometer axis
	 */
	
	private double targetDistance,
				timeout,
				angle,
				turnError,
				speed;

    public AutoDrive() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);

        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrain);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() { // Set the parameters for moving to the autozone (so that they can be easily changed on the fly)
    	timeout = 3.5;
    	angle = Robot.measurement.getAngle();
    	targetDistance = 129.0;
    	speed = 0.25;
    	setTimeout(timeout); // Sets a timeout for safety
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	turnError = Robot.measurement.getAngle();
    	Robot.driveTrain.drive(-turnError, speed);
    	
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return Robot.measurement.getDistanceFwd() >= targetDistance || isTimedOut(); // Stops if in the autozone or if the command timed out (for safety)
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.driveTrain.stop();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	end();
    }
}
