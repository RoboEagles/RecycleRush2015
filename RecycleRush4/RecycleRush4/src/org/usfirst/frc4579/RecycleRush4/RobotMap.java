// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4579.RecycleRush4;
    

import edu.wpi.first.wpilibj.BuiltInAccelerometer;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.Gyro;
import edu.wpi.first.wpilibj.PIDSource.PIDSourceParameter;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.interfaces.Accelerometer;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

//import java.util.Vector;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveTrainLeftMotor;
    public static SpeedController driveTrainRightMotor;
    public static RobotDrive driveTrainDriveSystem;
    public static Encoder lifterEncoder;
    public static DigitalInput lifterTopSwitch;
    public static DigitalInput lifterBottomSwitch;
    public static SpeedController lifterMotor;
    public static SpeedController suckWheelsLeft;
    public static SpeedController suckWheelsRight;
    public static Gyro measurementGyro;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static Accelerometer robotAccelerometer;
    
    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTrainLeftMotor = new Talon(0);
        LiveWindow.addActuator("DriveTrain", "LeftMotor", (Talon) driveTrainLeftMotor);
        
        driveTrainRightMotor = new Talon(1);
        LiveWindow.addActuator("DriveTrain", "RightMotor", (Talon) driveTrainRightMotor);
        
        driveTrainDriveSystem = new RobotDrive(driveTrainLeftMotor, driveTrainRightMotor);
        
        driveTrainDriveSystem.setSafetyEnabled(true);
        driveTrainDriveSystem.setExpiration(0.0);
        driveTrainDriveSystem.setSensitivity(0.5);
        driveTrainDriveSystem.setMaxOutput(1.0);
        

        lifterEncoder = new Encoder(2, 3, false, EncodingType.k4X);
        LiveWindow.addSensor("Lifter", "Encoder", lifterEncoder);
        lifterEncoder.setDistancePerPulse(0.010996);
        lifterEncoder.setPIDSourceParameter(PIDSourceParameter.kDistance);
        lifterTopSwitch = new DigitalInput(0);
        LiveWindow.addSensor("Lifter", "TopSwitch", lifterTopSwitch);
        
        lifterBottomSwitch = new DigitalInput(1);
        LiveWindow.addSensor("Lifter", "BottomSwitch", lifterBottomSwitch);
        
        lifterMotor = new Talon(2);
        LiveWindow.addActuator("Lifter", "Motor", (Talon) lifterMotor);
        
        suckWheelsLeft = new Talon(3);
        LiveWindow.addActuator("SuckWheels", "Left", (Talon) suckWheelsLeft);
        
        suckWheelsRight = new Talon(4);
        LiveWindow.addActuator("SuckWheels", "Right", (Talon) suckWheelsRight);
        
        measurementGyro = new Gyro(0);
        LiveWindow.addSensor("Measurement", "Gyro", measurementGyro);
        measurementGyro.setSensitivity(0.007);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        
        robotAccelerometer = new BuiltInAccelerometer();
        
    }
}
